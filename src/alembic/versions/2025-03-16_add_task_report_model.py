"""Add task_report model

Revision ID: 4ad28a1f9b52
Revises: 00376bb5a508
Create Date: 2025-03-16 20:54:13.801463

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "4ad28a1f9b52"
down_revision: Union[str, None] = "00376bb5a508"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "task_report",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("total_tasks", sa.Integer(), nullable=False),
        sa.Column("completed_tasks", sa.Integer(), nullable=False),
        sa.Column("overdue_tasks", sa.Integer(), nullable=False),
        sa.Column("start_date", sa.DateTime(), nullable=True),
        sa.Column("end_date", sa.DateTime(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("owner_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_id"], ["users.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("task_report", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_task_report_id"), ["id"], unique=False
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("task_report", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_task_report_id"))

    op.drop_table("task_report")
    # ### end Alembic commands ###
